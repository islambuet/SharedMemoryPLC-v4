const { IO, Browser } = require("./index");

const scanner = new IO.Scanner(); // Initalize new scanner on default port 2222

const browser = new Browser();




browser.on("New Device", device => {
    
    console.log(device);
    
});


// device configuration from manufacturer.
const config = {
    configInstance: {
        assembly: 120,
        size: 0
    },
    outputInstance: {
        assembly: 103,
        size: 1
    },
    inputInstance: {
        assembly: 111,
        size: 22
    }
};

const config2 = {
    configInstance: {
        assembly: 100,
        size: 0
    },
    outputInstance: {
        assembly: 102,
        size: 6
    },
    inputInstance: {
        assembly: 101,
        size: 6
    }
};

// Add a connection with (device config, rpi, ip_address)
const conn = scanner.addConnection(config, 10, "192.168.86.40")
const conn2 = scanner.addConnection(config2, 10, "192.168.86.42");

conn.addOutputBit(0, 0, 'output')
conn.addOutputBit(0, 2, 'reset')

conn2.addInputBit(4, 7, 'button1')
conn2.addOutputInt(4, 'counterOut')
// After first UDP packet is received
conn.on("connected", () => {
    console.log("Connected");
});

let toggle = false
let total = 0

setInterval(() => {
    conn2.setValue('counterOut', total)
    if (conn2.getValue('button1')) {
        conn.setValue('output', true)
        if (!toggle) {
            total++;
            
        }
        toggle = true
    } else {
        conn.setValue('output', false) 
        if(toggle) console.log(total)
        toggle = false
    }

}, 10)

// Called when UDP packets are not receiving. (Timeout is based on rpi setting)
conn.on("disconnected", () => {
    console.log("Disconnected");
});
